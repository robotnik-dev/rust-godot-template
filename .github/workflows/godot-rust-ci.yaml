name: "godot-rust-ci export"
on: push

# NOTE: If your `project.godot` is at the repository root, set `GODOT_PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: game
  GODOT_PROJECT_PATH: godot
  RUST_PROJECT_PATH: rust

jobs:
  build-rust:
    name: Build rust
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: rust setup
        run: rustup default stable
      - name: rust Build
        # TODO: cross compilen for windows, mac, etc because files are not there
        run: |
          cd $RUST_PROJECT_PATH
          cargo build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-build
          path: rust/target

  # export-windows:
  #   needs: build-rust
  #   name: Windows Export
  #   runs-on: ubuntu-22.04
  #   container:
  #     image: robotnikdev/godot-rust-ci:4.3
  #     credentials:
  #       username: robotnikdev
  #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: rust-build
  #         path: rust/target
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mkdir -v -p ~/.config/
  #         mv /root/.config/godot ~/.config/godot
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Windows Build
  #       run: |
  #         mkdir -v -p build/windows
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $GODOT_PROJECT_PATH
  #         godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows
  #         path: build/windows

  export-linux:
    needs: build-rust
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: rust-build
          path: rust/target/release
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          ls rust/target/debug
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $GODOT_PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  # export-web:
  #   needs: build-rust
  #   name: Web Export
  #   runs-on: ubuntu-22.04
  #   container:
  #     image: robotnikdev/godot-rust-ci:4.3
  #     credentials:
  #       username: robotnikdev
  #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: rust-build
  #         path: rust/target/release
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $GODOT_PROJECT_PATH
  #         godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: web
  #         path: build/web
  #     - name: Install rsync ðŸ“š
  #       run: |
  #         apt-get update && apt-get install -y rsync
  #     - name: Deploy to GitHub Pages ðŸš€
  #       uses: JamesIves/github-pages-deploy-action@releases/v4
  #       with:
  #         branch: gh-pages # The branch the action should deploy to.
  #         folder: build/web # The folder the action should deploy.

  # export-mac:
  #   needs: build-rust
  #   name: Mac Export
  #   runs-on: ubuntu-22.04
  #   container:
  #     image: robotnikdev/godot-rust-ci:4.3
  #     credentials:
  #       username: robotnikdev
  #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: rust-build
  #         path: rust/target/release
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $GODOT_PROJECT_PATH
  #         godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac
  #         path: build/mac

  # # Android Debug Job. It will use the generated debug.keystore.
  # export-android-debug:
  #   needs: build-rust
  #   name: Android Debug Export
  #   runs-on: ubuntu-22.04
  #   container:
  #     image: robotnikdev/godot-rust-ci:4.3
  #     credentials:
  #       username: robotnikdev
  #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: rust-build
  #         path: rust/target/release
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Android Debug Build
  #       run: |
  #         mkdir -v -p build/android
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $GODOT_PROJECT_PATH
  #         godot --headless --verbose --export-debug "Android Debug" "$EXPORT_DIR/android/$EXPORT_NAME-debug.apk"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-debug
  #         path: build/android
