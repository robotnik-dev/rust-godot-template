name: CI

on:
  push:
    tags:
      - "v*.*.*"

env:
  GODOT_VERSION: 4.3
  EXPORT_GAME_NAME: ${{ vars.GAMENAME }}
  GODOT_PROJECT_PATH: godot

jobs:
  linux-build-and-test:
    name: Linux Build And Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: rustup default stable
      - name: Build
        run: cargo build --release
      - name: Test
        run: cargo test --no-fail-fast --release -v
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: rust/target/release

  windows-build-and-test:
    name: Windows Build And Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          rustup target add x86_64-pc-windows-gnu
          sudo apt remove --purge --auto-remove mono-runtime
          sudo apt install mingw-w64 wine wine-binfmt
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-gnu
      - name: Test
        run: cargo test --no-fail-fast --release -v
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: rust/target/x86_64-pc-windows-gnu/release

  # mac-build-rust:
  #   name: Mac Build Rust
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup And Build Rust
  #       run: |
  #         cd $RUST_PROJECT_PATH
  #         curl -L https://github.com/roblabla/MacOSX-SDKs/releases/download/13.3/MacOSX13.3.sdk.tar.xz | tar xJ
  #         export SDKROOT=$(pwd)/MacOSX13.3.sdk/
  #         export PATH=$PATH:~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/
  #         export CARGO_TARGET_X86_64_APPLE_DARWIN_LINKER=rust-lld
  #         rustup target add x86_64-apple-darwin
  #         cargo build --release --target x86_64-apple-darwin
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac-build-rust
  #         path: rust/target/x86_64-apple-darwin/release

  linux-export:
    needs: linux-build-and-test
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: rust/target/release
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Export
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $GODOT_PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_GAME_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  windows-export:
    needs: windows-build-and-test
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: rust/target/release
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Export
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $GODOT_PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_GAME_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  web-export:
    needs: windows-build-and-test
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: rust/target/release
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Export
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $GODOT_PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

  create-release-draft:
    needs: [linux-export, windows-export, web-export]
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: linux
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: windows
      - name: Download Web Artifact
        uses: actions/download-artifact@v4
        with:
          name: web
          path: web
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            linux
            windows
            web

  # export-mac:
  #   needs: mac-build-rust
  #   name: Mac Export
  #   runs-on: ubuntu-latest
  #   container:
  #     image: robotnikdev/godot-rust-ci:4.3
  #     credentials:
  #       username: robotnikdev
  #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: mac-build-rust
  #         path: rust/target/release
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $GODOT_PROJECT_PATH
  #         godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_GAME_NAME.zip"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac
  #         path: build/mac

  # # Android Debug Job. It will use the generated debug.keystore.
  # export-android-debug:
  #   needs: windows-build-rust-debug
  #   name: Android Debug Export
  #   runs-on: ubuntu-latest
  #   container:
  #     image: robotnikdev/godot-rust-ci:4.3
  #     credentials:
  #       username: robotnikdev
  #       password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: windows-build-rust-debug
  #         path: rust/target/debug
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Android Debug Build
  #       run: |
  #         mkdir -v -p build/android
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $GODOT_PROJECT_PATH
  #         godot --headless --verbose --export-debug "Android Debug" "$EXPORT_DIR/android/$EXPORT_GAME_NAME-debug.apk"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-debug
  #         path: build/android
