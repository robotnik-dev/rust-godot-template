name: "Build and Test"

on: push

env:
  GODOT_VERSION: 4.3
  PROJECT_PATH: godot

jobs:
  linux:
    name: Linux Build
    runs-on: ubuntu-20.04
    container:
      image: robotnikdev/godot-rust-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: rustup default stable

      - name: Build
        working-directory: rust
        run: cargo build --release

      - name: Test
        working-directory: rust
        run: cargo test --no-fail-fast --release -v

      - name: Export
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/${{ vars.ITCHIO_GAMENAME }}.x86_64"


  windows:
    name: Windows Build
    runs-on: ubuntu-20.04
    container:
      image: robotnikdev/godot-rust-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          rustup default stable
          rustup target add x86_64-pc-windows-gnu

      - name: Build
        working-directory: rust
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Test
        working-directory: rust
        run: cargo test --no-fail-fast --release -v   # TODO: test for windows system

      - name: Export
        run: |
          mv rust/target/x86_64-pc-windows-gnu/release/rust.dll rust/target/release/rust.dll
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv -v /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/${{ vars.ITCHIO_GAMENAME }}.exe"


  web:
    name: Web Build
    runs-on: ubuntu-20.04
    container:
      image: robotnikdev/godot-rust-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          rustup default stable
          rustup set auto-self-update disable
          rustup toolchain install nightly
          rustup component add rust-src --toolchain nightly
          rustup target add wasm32-unknown-emscripten --toolchain nightly

      - name: Build
        working-directory: rust
        shell: bash
        run: |
          source /emsdk/emsdk_env.sh
          cargo +nightly build -Zbuild-std --target wasm32-unknown-emscripten --release

      - name: Test
        working-directory: rust
        run: cargo test --no-fail-fast --release -v

      - name: Export
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"


  # Android Debug Job. It will use the generated debug.keystore.
  android-debug:
    name: Android Debug Build
    runs-on: ubuntu-20.04
    env:
      CLANG_PATH: /usr/lib/android-sdk/ndk/23.2.8568313/toolchains/llvm/prebuilt/linux-x86_64/bin/clang
      CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER: /usr/lib/android-sdk/ndk/23.2.8568313/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android31-clang
    container:
      image: robotnikdev/godot-rust-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          rustup default stable
          rustup target add aarch64-linux-android

      - name: Build
        working-directory: rust
        run: cargo build --target aarch64-linux-android

      - name: Test
        working-directory: rust
        run: cargo test --no-fail-fast -v   # TODO: test for android system

      - name: Export
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mkdir -v -p build/android
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Android Debug" "$EXPORT_DIR/android/${{ vars.ITCHIO_GAMENAME }}-debug.apk"
