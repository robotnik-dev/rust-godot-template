name: "CI"

on:
  push:
    branches:
      - '**'

env:
  GODOT_VERSION: 4.3
  PROJECT_PATH: godot

jobs:
  linux:
    name: Linux Build
    runs-on: ubuntu-latest
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: rustup default stable
      - name: Build
        run: cargo build --release
        working-directory: rust
      - name: Test
        run: cargo test --no-fail-fast --release -v
        working-directory: rust
      - name: Export
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/${{ vars.ITCHIO_GAMENAME }}.x86_64"

  windows:
    name: Windows Build
    runs-on: ubuntu-latest
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          rustup default stable
          rustup target add x86_64-pc-windows-gnu
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-gnu
        working-directory: rust
      - name: Test
        run: cargo test --no-fail-fast --release -v
        working-directory: rust
      - name: Export
        run: |
          mkdir -v -p rust/target/release
          mv rust/target/x86_64-pc-windows-gnu/release rust/target/release
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/${{ vars.ITCHIO_GAMENAME }}.exe"

  # Android Debug Job. It will use the generated debug.keystore.
  export-android-debug:
    name: Android Debug Export
    runs-on: ubuntu-20.04
    container:
      image: robotnikdev/godot-rust-ci:4.3
      credentials:
        username: robotnikdev
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: rustup default stable
      - name: Build
        run: cargo build --release
        working-directory: rust
      - name: Test
        run: cargo test --no-fail-fast --release -v
      - name: Export
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Android Build
        run: |
          mkdir -v -p build/android
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Android Debug" "$EXPORT_DIR/android/${{ vars.ITCHIO_GAMENAME }}-debug.apk"
